application.name=NSL Services
product.apc = APC - Australian Plant Census
product.description.apc = The Australian Plant Census (APC) is a list of the accepted scientific names for the Australian vascular flora, ferns, gymnosperms, hornworts and liverworts, both native and introduced, and includes synonyms and misapplications for these names. The APC covers all published scientific plant names used in an Australian context in the taxonomic literature, but excludes taxa known only from cultivation in Australia. The taxonomy and nomenclature adopted for the APC are endorsed by the Council of Heads of Australasian Herbaria (CHAH).
product.search.tip.apc = Accepted names are in <b>Bold</b>.

product.apni = APNI - Australian Plant Name Index
product.description.apni = The Australian Plant Name Index (APNI) is a tool for the botanical community that deals with plant names and their usage in the scientific literature, whether as a current name or synonym. APNI does not recommend any particular taxonomy or nomenclature. For a listing of currently accepted scientific names for the Australian vascular flora, please use the Australian Plant Census (APC) link above.

default.doesnt.match.message=Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]
default.invalid.url.message=Property [{0}] of class [{1}] with value [{2}] is not a valid URL
default.invalid.creditCard.message=Property [{0}] of class [{1}] with value [{2}] is not a valid credit card number
default.invalid.email.message=Property [{0}] of class [{1}] with value [{2}] is not a valid e-mail address
default.invalid.range.message=Property [{0}] of class [{1}] with value [{2}] does not fall within the valid range from [{3}] to [{4}]
default.invalid.size.message=Property [{0}] of class [{1}] with value [{2}] does not fall within the valid size range from [{3}] to [{4}]
default.invalid.max.message=Property [{0}] of class [{1}] with value [{2}] exceeds maximum value [{3}]
default.invalid.min.message=Property [{0}] of class [{1}] with value [{2}] is less than minimum value [{3}]
default.invalid.max.size.message=Property [{0}] of class [{1}] with value [{2}] exceeds the maximum size of [{3}]
default.invalid.min.size.message=Property [{0}] of class [{1}] with value [{2}] is less than the minimum size of [{3}]
default.invalid.validator.message=Property [{0}] of class [{1}] with value [{2}] does not pass custom validation
default.not.inlist.message=Property [{0}] of class [{1}] with value [{2}] is not contained within the list [{3}]
default.blank.message=Property [{0}] of class [{1}] cannot be blank
default.not.equal.message=Property [{0}] of class [{1}] with value [{2}] cannot equal [{3}]
default.null.message=Property [{0}] of class [{1}] cannot be null
default.not.unique.message=Property [{0}] of class [{1}] with value [{2}] must be unique

default.paginate.prev=Previous
default.paginate.next=Next
default.boolean.true=True
default.boolean.false=False
default.date.format=yyyy-MM-dd HH:mm:ss z
default.number.format=0

default.created.message={0} {1} created
default.updated.message={0} {1} updated
default.deleted.message={0} {1} deleted
default.not.deleted.message={0} {1} could not be deleted
default.not.found.message={0} not found with id {1}
default.optimistic.locking.failure=Another user has updated this {0} while you were editing

default.home.label=Home
default.list.label={0} List
default.add.label=Add {0}
default.new.label=New {0}
default.create.label=Create {0}
default.show.label=Show {0}
default.edit.label=Edit {0}

default.button.create.label=Create
default.button.edit.label=Edit
default.button.update.label=Update
default.button.delete.label=Delete
default.button.delete.confirm.message=Are you sure?

# Data binding errors. Use "typeMismatch.$className.$propertyName to customize (eg typeMismatch.Book.author)
typeMismatch.java.net.URL=Property {0} must be a valid URL
typeMismatch.java.net.URI=Property {0} must be a valid URI
typeMismatch.java.util.Date=Property {0} must be a valid Date
typeMismatch.java.lang.Double=Property {0} must be a valid number
typeMismatch.java.lang.Integer=Property {0} must be a valid number
typeMismatch.java.lang.Long=Property {0} must be a valid number
typeMismatch.java.lang.Short=Property {0} must be a valid number
typeMismatch.java.math.BigDecimal=Property {0} must be a valid number
typeMismatch.java.math.BigInteger=Property {0} must be a valid number


nsl2.boatree.service_exception.EMPTY={0}
nsl2.boatree.service_exception.TODO=TODO: {0}
nsl2.boatree.service_exception.SIMPLE_2={0} {1}

nsl2.boatree.service_exception.createDraftNode=Cannot create node under {0}: {1}
nsl2.boatree.service_exception.updateDraftNode=Cannot update node {0}: {1}
nsl2.boatree.service_exception.deleteDraftNode=Cannot delete node {0}: {1}
nsl2.boatree.service_exception.deleteDraftTree=Cannot delete tree from  {0}: {1}
nsl2.boatree.service_exception.updateDraftNodeLink=Cannot update link {0}[{1}]: {2}
nsl2.boatree.service_exception.updateDraftNodeLink2=Cannot update link {0}: {1}
nsl2.boatree.service_exception.deleteDraftNodeLink=Cannot delete link {0}[{1}]: {2}
nsl2.boatree.service_exception.deleteDraftNodeLink2=Cannot delete link {0}]: {1}
nsl2.boatree.service_exception.persistNode=Cannot persist {0}: {1}
nsl2.boatree.service_exception.persistAll=Cannot persist {0}: {1}
nsl2.boatree.service_exception.adoptNode=Cannot adopt {1} into {0}: {2}
nsl2.boatree.service_exception.checkoutNode=Cannot checkout {1} in {0}: {2}
nsl2.boatree.service_exception.checkoutLink=Cannot checkout {0}: {1}
nsl2.boatree.service_exception.undoCheckout=Cannot undo checkout {0}: {1}
nsl2.boatree.service_exception.performVersioning=Cannot perform versioning: {0} issue(s)
nsl2.boatree.service_exception.deleteArrangement=Cannot delete arrangement {0}: {1}
nsl2.boatree.service_exception.findNodeCurrentOrCheckedout=Cannot locate {1} within {0}: {2}
nsl2.boatree.service_exception.PERSISTENT_NODE_NOT_PERMITTED={0} is a persistent node
nsl2.boatree.service_exception.DRAFT_NODE_NOT_PERMITTED={0} is a draft node
nsl2.boatree.service_exception.ROOT_NODE_NOT_PERMITTED={0} is the root node of an arrangement
nsl2.boatree.service_exception.NODE_WITH_SUBNODES_NOT_PERMITTED={0} has subnodes
nsl2.boatree.service_exception.OLD_NODE_NOT_PERMITTED={0} is not a current node
nsl2.boatree.service_exception.END_NODE_NOT_PERMITTED=Cannot use the END node here
nsl2.boatree.service_exception.NO_LINK_SEQ_N={0} does not have a link {1}
nsl2.boatree.service_exception.NEW_SUPERNODE_BELONGS_TO_DIFFERENT_DRAFT_TREE=New supernode {0} belongs to a different draft tree
nsl2.boatree.service_exception.LOOP_DETECTED=Node {0} is a subnode of node {1}
nsl2.boatree.service_exception.NODE_HAS_NO_PREV=Node {0} is not a checkout of a preexisting node
nsl2.boatree.service_exception.NODE_HAS_MORE_THAN_ONE_SUPERNODE=Node {0} does not have one supernode
nsl2.boatree.service_exception.NODE_APPEARS_IN_MULTIPLE_LOCATIONS_IN={0} appears in multiple locations under {1}
nsl2.boatree.service_exception.NODES_ARE_USED_IN_OTHER_TREES=Nodes in arrangement {0} are used in other arrangements
nsl2.boatree.service_exception.THING_NOT_FOUND_IN_ARRANGEMENT={2} {1} not found in arrangement {0}
nsl2.boatree.service_exception.THING_FOUND_IN_ARRANGEMENT_MULTIPLE_TIMES={2} {1} found in arrangement {0} multiple times
nsl2.boatree.service_exception.THING_FOUND_IN_ARRANGEMENT={2} {1} already present in arrangement {0}
nsl2.boatree.service_exception.LITERAL_NODE_MAY_NOT_HAVE_SUBNODES=Node {1} may not be placed under literal node {0}
nsl2.boatree.service_exception.NAME_URI_DOESNT_MATCH=The correct uri for nsl name {1} is not {0}
nsl2.boatree.service_exception.INSTANCE_URI_DOESNT_MATCH=The correct uri for nsl instance {1} is not {0}

nsl2.boatree.service_exception.NAMESPACE_MISMATCH=Mismatched namespace: {0} and {1}

nsl2.boatree.service_exception.CANNOT_CREATE_SYSTEM_NODES=Nodes of type S cannot be created with this service
nsl2.boatree.service_exception.CANNOT_CREATE_TEMP_NODES=Nodes of type Z cannot be created with this service
nsl2.boatree.service_exception.CANNOT_CREATE_DOCUMENT_NODE_WITH_A_NAME_OR_TAXON=Document nodes cannot have a name or taxon
nsl2.boatree.service_exception.CANNOT_CREATE_VALUE_NODE_WITH_A_NAME_OR_TAXON=Value nodes cannot have a name or taxon
nsl2.boatree.service_exception.CANNOT_CREATE_TAXONOMIC_NODE_WITH_A_LITERAL_VALUE=Taxonomic nodes can't have a literal value
nsl2.boatree.service_exception.VALUE_NODES_MUST_HAVE_RESOURCE_OR_LITERAL=Value nodes must have either a resource URI or a literal
nsl2.boatree.service_exception.VALUE_NODES_MUST_USED_FIXED_LINK=Value nodes must be referred to via a fixed link


nsl2.boatree.service_exception.CANNOT_UPDATE_PROFILE_ITEM=Cannot update profile item {1} on {0}
nsl2.boatree.service_exception.MULTIPLE_PROFILE_VALUES_FOUND=Multiple values found for {0}

nsl2.boatree.service_exception.CANNOT_REPLACE_NODE=Cannot replace {0} with {1}: {2}
nsl2.boatree.service_exception.CANNOT_USE_NODE_AS_A_REPLACEMENT=Cannot use {1} as a replacement node for {0}: {2}
nsl2.boatree.service_exception.CANNOT_REPLACE_NODE_WITH_NODE_BEING_REPLACED=Cannot replace {0} with {1} which itself is being replaced
nsl2.boatree.service_exception.CANNOT_REPLACE_NODE_WITH_NODE_BEING_SYNTHETICALLY_REPLACED=Cannot replace {0} with {1} which itself is being synthetically replaced
nsl2.boatree.service_exception.CANNOT_REPLACE_NODE_WITH_NODE_ABOVE_A_TRACKING_LINK_ETC=Cannot replace {0} with {1} because {0} is visible to {1} via a tracking link
nsl2.boatree.service_exception.NODE_WOULD_BE_ORPHANED=Node {0} would be orphaned by this operation

nsl2.boatree.service_exception.createClassification=Cannot create classification {0}: {1}
nsl2.boatree.service_exception.updateClassification=Cannot update classification {0}: {1}
nsl2.boatree.service_exception.LABEL_ALREADY_EXISTS=A classification named {0} already exists
nsl2.boatree.service_exception.CANNOT_PLACE_NAME_UNDER_HIGHER_RANK=Cannot place a name of rank {0} under a name of rank {1}

nsl2.boatree.service_exception.placeNameOnTree=Cannot place name {0} on tree {1}
nsl2.boatree.service_exception.removeNameFromTree=Cannot remove name {0} from tree {1}
nsl2.boatree.service_exception.updateValue=Cannot update value {0} for name {1} in tree {2}
nsl2.boatree.service_exception.performChecking=Cannot checkin node {0} for name {1}
nsl2.boatree.service_exception.NODE_HAS_SUBTAXA=Node {0} has subtaxa
nsl2.boatree.service_exception.NAME_CANNOT_BE_PLACED_UNDER_NAME={1} has a different binomial name parent to {0}
nsl2.boatree.service_exception.HAS_SYNONYM_ALREADY_IN_TREE=This instance has synonyms already in the tree
nsl2.boatree.service_exception.HAS_SYNONYM_ALREADY_IN_TREE_item=(this instance) {1} {0}
nsl2.boatree.service_exception.IS_SYNONYM_OF_ALREADY_IN_TREE=Instances already in the tree have this instance as a synonym
nsl2.boatree.service_exception.IS_SYNONYM_OF_ALREADY_IN_TREE_item={0} {1} (this instance)
nsl2.boatree.service_exception.NAME_PLACED_ELSEWHERE_IN_BASE_TREE=Checking in {3} from "{4}" into {2} will result in a duplicate placement of {0}, which is currently placed in {2} under {1}.

au.org.biodiversity.nsl.tree.ValidationResult.BAD_REPLACEDAT=Bad replacedat in {0}/{1}, node {2}
au.org.biodiversity.nsl.tree.ValidationResult.CURRENT_NO_PARENT=Orphan in {0}/{1}, node {2}
au.org.biodiversity.nsl.tree.ValidationResult.NAME_APPEARS_TWICE=Duplicate name in {0}/{1}, node {2}
au.org.biodiversity.nsl.tree.ValidationResult.INSTANCE_APPEARS_TWICE=Duplicate instance in {0}/{1}, node {2}
au.org.biodiversity.nsl.tree.ValidationResult.NODE_HAS_MULTIPLE_SUPERNODES=Node {2} has multiple current supernodes in {0}/{1}
